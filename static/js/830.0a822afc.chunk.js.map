{"version":3,"file":"static/js/830.0a822afc.chunk.js","mappings":"2MAGaA,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaH,EAAMI,IACrBC,MAAO,CAACC,KAAML,GAFlB,SAIKD,EAAMO,SALNP,EAAMI,GAStB,C,+ICbYI,EAAa,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,eAClC,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KAgBA,OACI,kBAAMJ,SAXW,SAAAK,GACjBA,EAAEC,iBAEmB,KAAjBH,EAAMI,OAIVP,EAASG,GAHLK,EAAAA,GAAAA,MAAY,uBAInB,EAGG,WACI,kBACIC,KAAK,OACLC,KAAK,cACLP,MAAOA,EACPQ,SApBQ,SAAAN,GAChBD,EAASC,EAAEO,OAAOT,MAAMU,cAC3B,EAmBWC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEhB,mBAAQP,KAAK,SAAb,sBAGX,E,QCjCD,EAA6B,2B,SCkD7B,EA3Ce,WAAO,IAAD,EACjB,GAA4BP,EAAAA,EAAAA,UAAS,MAArC,eAAOe,EAAP,KAAeC,EAAf,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAc,UAAGmB,EAAaE,IAAI,gBAApB,QAAgC,GA0BpD,OApBAC,EAAAA,EAAAA,YAAU,WACN,GAAKtB,EAAL,CAGA,IAAMuB,EAAS,mCAAG,WAAOC,EAAQC,GAAf,iGAGSC,EAAAA,EAAAA,GAAUF,EAAQC,GAH3B,UAIiB,KADrBE,EAHI,QAIDC,cAJC,uBAKNrB,EAAAA,GAAAA,MAAY,sCALN,0BAQVU,EAAUU,EAAKE,SARL,kDAUVtB,EAAAA,GAAAA,MAAA,MAVU,0DAAH,wDAafgB,EAAU,CAACO,MAAO9B,GA1BN,gBAYX,CAeJ,GAAE,CAACA,KAGA,iBAAK+B,UAAWC,EAAhB,WACI,SAAClC,EAAD,CAAYC,SA1BK,SAAAkC,GACrBb,EAAgB,CAAEU,MAAOG,GAC5B,EAwB+CjC,eAAgBA,KACxD,+BACKgB,QADL,IACKA,OADL,EACKA,EAAQkB,KAAI,SAAA5C,GAAK,OACd,SAACD,EAAA,EAAD,CAA+BC,MAAOA,GAAjBA,EAAMI,GADb,QAMjC,C,uGChDYyC,EAAM,mCCEbC,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QDJiB,iCCORZ,EAAS,mCAAG,6GAAOF,EAAP,+BAAgB,CAAC,EAAGC,EAApB,+BAA4B,GAA5B,SACAW,EAAUf,IAAII,EAAS,CAC5CD,QAAO,QACLe,QAASJ,GACNX,KAJgB,uBACfG,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,oD","sources":["components/MoviesListItem/MoviesListItem.jsx","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","constants/constants.js","services/movies.api.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport const MoviesListItem = ({ movie }) => {\n    const location = useLocation();\n\n    return (\n        <li key={movie.id}>\n            <Link\n                to={`/movies/${movie.id}`}\n                state={{from: location}}\n            >\n                {movie.title}\n            </Link>\n        </li>\n    );\n}","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nexport const SearchForm = ({onSubmit, searchQueryUrl}) => {\n    const [value, setValue] = useState(searchQueryUrl);\n\n    const handleInput = e => {\n        setValue(e.target.value.toLowerCase());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (value.trim() === '') {\n            toast.error(\"Enter search value !\");\n            return;\n        }\n        onSubmit(value);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>            \n            <input\n                type=\"text\"\n                name=\"searchValue\"\n                value={value}\n                onChange={handleInput}\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n            />            \n            <button type=\"submit\">Search</button>\n        </form>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesPage\":\"Movies_moviesPage__dQN5J\"};","import { MoviesListItem } from \"components/MoviesListItem\";\nimport { SearchForm } from \"components/SearchForm\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport {getMovies} from '../../services/movies.api'\nimport { toast } from \"react-toastify\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const purpose = '/search/movie';\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQueryUrl = searchParams.get('query') ?? '';\n    \n    const handleFormSubmit = searchQuery => {\n        setSearchParams({ query: searchQuery });\n    }\n\n    useEffect(() => {\n        if (!searchQueryUrl) {\n            return;\n        }\n        const fetchData = async (params, purpose) => {\n            // setLoading(true);\n            try {\n                const data = await getMovies(params, purpose);\n                if (data.total_results === 0) {\n                    toast.error('There are no movies on your query!');\n                    return;\n                }\n                setMovies(data.results);\n            } catch (error) {\n                toast.error(error);\n            }\n        };\n        fetchData({query: searchQueryUrl}, purpose);\n    }, [searchQueryUrl]);\n   \n    return (\n        <div className={css.moviesPage}>\n            <SearchForm onSubmit={handleFormSubmit} searchQueryUrl={searchQueryUrl}/>\n            <ul>\n                {movies?.map(movie => (\n                    <MoviesListItem key={movie.id} movie={movie}/>\n                ))}\n            </ul>\n        </div>\n    )\n};\n\nexport default Movies;","export const BASE_URL = `https://api.themoviedb.org/3`;\nexport const MY_KEY = `cfc4cd1cc06184d90b3581b388e6e4e5`;\n\n","import axios from 'axios';\nimport { BASE_URL, MY_KEY } from 'constants';\n\nconst moviesApi = axios.create({\n    baseURL: BASE_URL,\n});\n\nexport const getMovies = async (params = {}, purpose='') => {\n  const { data } = await moviesApi.get(purpose, {\n    params: {\n      api_key: MY_KEY,\n      ...params,\n    },\n  });\n\n  return data;\n};"],"names":["MoviesListItem","movie","location","useLocation","to","id","state","from","title","SearchForm","onSubmit","searchQueryUrl","useState","value","setValue","e","preventDefault","trim","toast","type","name","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","params","purpose","getMovies","data","total_results","results","query","className","css","searchQuery","map","MY_KEY","moviesApi","axios","baseURL","api_key"],"sourceRoot":""}