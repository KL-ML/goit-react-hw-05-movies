{"version":3,"file":"static/js/135.f8eec5c2.chunk.js","mappings":"8PACA,EAA2B,+BAA3B,EAAuE,iCAAvE,EAAyH,qCAAzH,EAAyK,+BAAzK,EAAiN,0D,kBCK3MA,EAAgB,SAAC,GACnB,OADoC,EAAfC,SAEfC,EACAA,CACT,EA4ED,EA1EqB,WAAO,IAAD,QAEvB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQ,iBAAaF,GACrBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,WAAOC,EAAQC,GAAf,iGAESC,EAAAA,EAAAA,GAAUF,EAAQC,GAF3B,OAEJE,EAFI,OAGVX,EAASW,GAHC,gDAKVC,EAAAA,GAAAA,MAAA,MALU,yDAAH,wDAQfL,EAAU,CAAC,EAAGJ,EACjB,GAAE,CAACA,IAEJ,IAAQU,EAAuDd,EAAvDc,YAAaC,EAA0Cf,EAA1Ce,MAAOC,EAAmChB,EAAnCgB,aAAcC,EAAqBjB,EAArBiB,SAAUC,EAAWlB,EAAXkB,OACpD,OACI,iCACI,SAAC,KAAD,CAAMC,GAAE,oBAAEd,EAASe,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,qBACCrB,IACG,iCACI,iBAAKsB,UAAWxB,EAAhB,WACI,gBAAKwB,UAAU,WAAf,UACI,gBAAKC,IACDT,EAAW,yCAC6BA,GAD7B,+CAIXU,MAAO,IACPC,QAAQ,OACRC,IAAI,cAEZ,iBAAKJ,UAAU,WAAf,WACI,wBAAKP,KACL,yCAAgC,GAAfC,GAAmBW,UAApC,QACA,sCACA,uBAAIV,KACJ,oCACA,eAAIK,UAAWxB,EAAf,SACKoB,GACGA,EAAOU,QACPV,EAAOW,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACd,OAAO,wBAAcA,GAALD,EACnB,aAKjB,iBAAKR,UAAWxB,EAAhB,WACI,eAAIwB,UAAU,kBAAd,qCACA,gBAAIA,UAAWxB,EAAf,WACI,yBACI,SAAC,KAAD,CAASwB,UAAW1B,EAAeuB,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAEhB,EAASe,aAAX,aAAE,EAAgBC,MAA5E,qBAEJ,yBACI,SAAC,KAAD,CAASC,UAAW1B,EAAeuB,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAEhB,EAASe,aAAX,aAAE,EAAgBC,MAA/E,8BAIZ,0BACI,SAAC,EAAAW,SAAD,CAAUC,UAAU,sCAApB,UACI,SAAC,KAAD,aAO3B,C,uGCnFYC,EAAM,mCCEbC,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QDJiB,iCCOR1B,EAAS,mCAAG,6GAAOF,EAAP,+BAAgB,CAAC,EAAGC,EAApB,+BAA4B,GAA5B,SACAyB,EAAUG,IAAI5B,EAAS,CAC5CD,QAAO,QACL8B,QAASL,GACNzB,KAJgB,uBACfG,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,oD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","constants/constants.js","services/movies.api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"MovieDetails_filmCard__e1S1G\",\"genresList\":\"MovieDetails_genresList__2o809\",\"additionalInfo\":\"MovieDetails_additionalInfo__4J0eA\",\"addLinks\":\"MovieDetails_addLinks__lp1W+\",\"active\":\"MovieDetails_active__uPNdW MovieDetails_addLinks__lp1W+\"};","import React, { useState, useEffect, Suspense } from \"react\";\nimport { NavLink, Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovies } from '../../services/movies.api';\nimport css from './MovieDetails.module.css';\nimport { toast } from \"react-toastify\";\n\nconst getActiveLink = ({ isActive }) => {\n    return isActive\n        ? css.active\n        : css.addLinks;\n};\n\nconst MovieDetails = () => {\n\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n    const movieUrl = `/movie/${movieId}`;\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchData = async (params, purpose) => {\n            try {\n                const data = await getMovies(params, purpose);\n                setMovie(data);\n            } catch (error) {\n                toast.error(error);\n            }\n        };\n        fetchData({}, movieUrl);\n    }, [movieUrl]);\n\n    const { poster_path, title, vote_average, overview, genres } = movie;\n    return (\n        <>\n            <Link to={location.state?.from ?? '/'}>Go back</Link>\n            {movie &&\n                <>\n                    <div className={css.filmCard}>\n                        <div className=\"imgThumb\">\n                            <img src={\n                                poster_path\n                                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                                    : `http://www.suryalaya.org/images/no_image.jpg`\n                            }\n                                width={240}\n                                loading=\"lazy\"\n                                alt=\"poster\" />\n                        </div>\n                        <div className=\"filmInfo\">\n                            <h2>{title}</h2>\n                            <p>User Score: {(vote_average * 10).toFixed()}%</p>\n                            <h3>Overview</h3>\n                            <p>{overview}</p>\n                            <h4>Genres</h4>\n                            <ul className={css.genresList}>\n                                {genres &&\n                                    genres.length &&\n                                    genres.map(({ id, name }) => {\n                                        return <li key={id}>{name}</li>\n                                    })}\n                            </ul>\n                        </div>\n                    \n                    </div>\n                    <div className={css.additionalInfo}>\n                        <h4 className=\"additionalTitle\">Additional information</h4>\n                        <ul className={css.addLinks}>\n                            <li>\n                                <NavLink className={getActiveLink} to=\"cast\" state={{ from: location.state?.from }}>Cast</NavLink>\n                            </li>\n                            <li>\n                                <NavLink className={getActiveLink} to=\"reviews\" state={{ from: location.state?.from }}>Reviews</NavLink>\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                        <Suspense fallback={<p>Loading...</p>}>\n                            <Outlet />\n                        </Suspense>\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nexport default MovieDetails;","export const BASE_URL = `https://api.themoviedb.org/3`;\nexport const MY_KEY = `cfc4cd1cc06184d90b3581b388e6e4e5`;\n\n","import axios from 'axios';\nimport { BASE_URL, MY_KEY } from 'constants';\n\nconst moviesApi = axios.create({\n    baseURL: BASE_URL,\n});\n\nexport const getMovies = async (params = {}, purpose='') => {\n  const { data } = await moviesApi.get(purpose, {\n    params: {\n      api_key: MY_KEY,\n      ...params,\n    },\n  });\n\n  return data;\n};"],"names":["getActiveLink","isActive","css","useState","movie","setMovie","movieId","useParams","movieUrl","location","useLocation","useEffect","fetchData","params","purpose","getMovies","data","toast","poster_path","title","vote_average","overview","genres","to","state","from","className","src","width","loading","alt","toFixed","length","map","id","name","Suspense","fallback","MY_KEY","moviesApi","axios","baseURL","get","api_key"],"sourceRoot":""}