{"version":3,"file":"static/js/469.ba54da92.chunk.js","mappings":"+PACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA+F,uB,SCsD/F,EAjDa,WACV,OAAwBA,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAO,iBAAaF,EAAb,YAeb,OAbAG,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAS,mCAAG,WAAOC,EAAQH,GAAf,iGAGOI,EAAAA,EAAAA,GAAUD,EAAQH,GAHzB,OAGNK,EAHM,OAIZR,EAAQQ,EAAKT,MAJD,gDAMZU,EAAAA,GAAAA,MAAA,MANY,yDAAH,wDASfJ,EAAU,CAAC,EAAGF,EAChB,GAAE,CAACA,KAGD,+BACG,eAAIO,UAAWC,EAAf,SACIZ,GAAQA,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACvC,OACG,gBACGN,UAAWC,EADd,WAGG,gBAAKM,IACFD,EAAY,yCAC2BA,GAD3B,+CAIZE,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEX,iBAAKX,UAAWC,EAAhB,WACG,wBAAKG,KACL,uCAAeC,UAbbF,EAiBb,OAKZ,C,uGCpDYS,EAAM,mCCEbC,EAAYC,EAAAA,EAAAA,OAAa,CAC3BC,QDJiB,iCCORlB,EAAS,mCAAG,6GAAOD,EAAP,+BAAgB,CAAC,EAAGH,EAApB,+BAA4B,GAA5B,SACAoB,EAAUG,IAAIvB,EAAS,CAC5CG,QAAO,QACLqB,QAASL,GACNhB,KAJgB,uBACfE,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,oD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/Cast/Cast.module.css?fa93","pages/MovieDetails/Cast/Cast.jsx","constants/constants.js","services/movies.api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__2aKbF\",\"castItem\":\"Cast_castItem__bF9p+\",\"castInfo\":\"Cast_castInfo__NHrU2\"};","import React, {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovies } from \"services/movies.api\";\nimport { toast } from \"react-toastify\";\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n   const [cast, setCast] = useState();\n   const { movieId } = useParams();\n   const purpose = `/movie/${movieId}/credits`;\n\n   useEffect(() => {\n      const fetchData = async (params, purpose) => {\n         // setLoading(true);\n         try {\n            const data = await getMovies(params, purpose);\n            setCast(data.cast);\n         } catch (error) {\n            toast.error(error);\n         }\n      };\n      fetchData({}, purpose);\n   }, [purpose]);\n\n   return (\n      <>\n         <ul className={css.castList}>\n            {cast && cast.map(({ id, name, character, profile_path }) => {\n               return (\n                  <li\n                     className={css.castItem}\n                     key={id}>\n                     <img src={\n                        profile_path\n                           ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                           : `http://www.suryalaya.org/images/no_image.jpg`\n                     }\n                        alt=\"actor\"\n                        loading=\"lazy\"\n                        width={180}\n                        height={270}\n                     />\n                     <div className={css.castInfo}>\n                        <h3>{name}</h3>\n                        <p>Character: {character}</p>\n                     </div>\n                  </li>\n               )\n            })\n            }\n         </ul>\n      </>\n   );\n};\n\nexport default Cast;","export const BASE_URL = `https://api.themoviedb.org/3`;\nexport const MY_KEY = `cfc4cd1cc06184d90b3581b388e6e4e5`;\n\n","import axios from 'axios';\nimport { BASE_URL, MY_KEY } from 'constants';\n\nconst moviesApi = axios.create({\n    baseURL: BASE_URL,\n});\n\nexport const getMovies = async (params = {}, purpose='') => {\n  const { data } = await moviesApi.get(purpose, {\n    params: {\n      api_key: MY_KEY,\n      ...params,\n    },\n  });\n\n  return data;\n};"],"names":["useState","cast","setCast","movieId","useParams","purpose","useEffect","fetchData","params","getMovies","data","toast","className","css","map","id","name","character","profile_path","src","alt","loading","width","height","MY_KEY","moviesApi","axios","baseURL","get","api_key"],"sourceRoot":""}